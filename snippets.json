{"_id":{"$oid":"599a5744aed20c24bfa8c221"},"__v":0,"title":"collection-manager","body":"const express = require('express');\r\nconst handlebars = require('express-handlebars');\r\nconst bodyParser = require('body-parser');\r\nconst routes = require('./routes/routes');\r\n// mongoose. not a mammal\r\nconst mongoose = require('mongoose');\r\n// bluebird is a promise library. checkout bluebirdjs.org\r\nconst bluebird = require('bluebird');\r\n// set mongoose's primise library to be bluebird\r\nmongoose.Promise = bluebird;\r\n\r\n// create express app\r\nconst app = express();\r\n\r\n// tell express to use handlebars\r\napp.engine('handlebars', handlebars({ defaultLayout: 'main' }));\r\napp.set('views', './views');\r\napp.set('view engine', 'handlebars');\r\n\r\napp.use(express.static('public'));\r\n\r\n//tell express to use the bodyParser middleware to parse form data\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n// use my routes\r\napp.use('/', routes);\r\n\r\nmongoose\r\n  // connect to mongo via mongoose\r\n  .connect('mongodb://localhost:27017/newdb', { useMongoClient: true })\r\n  // now we can do whatever we want with mongoose.\r\n  // configure session support middleware with express-session\r\n  .then(() =\u003e app.listen(3000, () =\u003e console.log('ready to roll!!')));\r\n","notes":"mongo db collection manager","language":"nodejs","tags":["js, nodejs, handlebars"],"author":"luis","id":"599a5744aed20c24bfa8c221"}
{"_id":{"$oid":"599a5817aed20c24bfa8c222"},"__v":0,"title":"collections-manager-css","body":"Body{\r\n\r\n  background-color: #669999;\r\n  font-family: monospace;\r\n}\r\n\r\nnav{\r\n margin-bottom: 20px;\r\n text-align: center;\r\n}\r\n\r\ntable{\r\n  border: 1px;\r\n  border-radius: 10px;\r\n  border-collapse: collapse;\r\n  background-color: White;\r\n}\r\n\r\nh1{\r\n  font-size: 40px;\r\n  text-align: center;\r\n}\r\n\r\nth{\r\n  padding: 10px;\r\n  font-size: 30px;\r\n}\r\n\r\ntd{\r\ntext-align: center;\r\nfont-size: 40px;\r\n}\r\n\r\n.button {\r\n    background-color: #8cb3d9;\r\n    border-radius: 10px;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n}\r\n\r\nform{\r\n\r\ntext-align: center;\r\nfont-size: 20px;\r\n\r\n}\r\n\r\ninput[type=text], select {\r\n    font-size: 20px;\r\n    width: 25%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nlabel{\r\n    display: inline-block;\r\n    float: left;\r\n    clear: left;\r\n    width: 250px;\r\n    text-align: right;\r\n    padding-top: 20px;\r\n    padding-right: 20px;\r\n}\r\ninput {\r\n  display: inline-block;\r\n  float: left;\r\n}\r\n\r\n.primary {\r\n\r\n    background-color: #8cb3d9;\r\n    border-radius: 10px;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n}","notes":"styling  using css","language":"css","tags":["nodejs, handlebars, css"],"author":"luis","id":"599a5817aed20c24bfa8c222"}
{"_id":{"$oid":"599a5931aed20c24bfa8c223"},"__v":0,"title":"Secret-Word","body":"const express = require('express');\r\nconst handlebars = require('express-handlebars');\r\nconst bodyParser = require('body-parser');\r\nconst morgan = require('morgan');\r\nconst session = require('express-session')\r\nconst expressValidator = require('express-validator')\r\nconst app = express();\r\nconst fs = require('fs')\r\nlet words = fs.readFileSync('/usr/share/dict/words', 'utf-8').toLowerCase().split('\\n')\r\n\r\nlet guess = []\r\nlet word = words[Math.floor(Math.random(words) * words.length)]\r\nconsole.log(word)\r\nlet wordLength = word.split('')\r\nlet placeholder = wordLength.map(x =\u003e {\r\n  return '_'\r\n})\r\nlet count = 8\r\n\r\napp.engine('handlebars', handlebars());\r\napp.set('views', './views');\r\napp.set('view engine', 'handlebars');\r\n\r\n\r\napp.use(express.static('public'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({\r\n  extended: false\r\n}));\r\n\r\napp.use(expressValidator());\r\n\r\napp.use(session({\r\n  secret: 'secret',\r\n  resave: false,\r\n  saveUninitialized: true\r\n}))\r\n\r\napp.use(morgan('dev'));\r\n\r\n//session\r\napp.use((req, res, next) =\u003e {\r\n  if(!req.session.word) {\r\n    req.session.word = [];\r\n  }\r\n  next();\r\n});\r\n//re-start\r\napp.post('/reset', (req,res) =\u003e {\r\n  console.log(req.session.word);\r\n  req.session.word = [];\r\n  count = 8;\r\n  word = words[Math.floor(Math.random(words) * words.length)]\r\n  wordLength = word.split('')\r\n  placeholder = wordLength.map(x =\u003e {\r\n    return '_'\r\n  })\r\n  guess = [];\r\n  res.redirect('/');\r\n});\r\n\r\n\r\napp.get('/', (req, res) =\u003e {\r\n  res.render('home', { placeholder: placeholder, guess: guess, count: count })\r\n})\r\napp.get('/triunfo', (req, res) =\u003e {\r\n  res.render('triunfo', { guess: guess, count: count, word: word })\r\n})\r\napp.get('/failed', (req, res) =\u003e {\r\nres.render('failed', { guess: guess, count: count, word: word })\r\n})\r\n\r\napp.post('/guess', (req, res) =\u003e {\r\n  guess.push(req.body.guess)\r\n  if (wordLength.includes(req.body.guess)) {\r\n    wordLength.forEach((letter, index) =\u003e {\r\n      if (letter === req.body.guess) {\r\n        placeholder[index] = letter\r\n      }\r\n    })\r\n  } else {\r\n    count -= 1\r\n    if (placeholder.join(',') != wordLength.join(',') \u0026\u0026 count \u003c= 0) {\r\n      message = 'FAILED!'\r\n      console.log(message)\r\n      req.session.destroy();\r\n      res.redirect('/failed')\r\n    }\r\n  }\r\n\r\n   if (placeholder.join(',') === wordLength.join(',') \u0026\u0026 count \u003e= 0) {\r\n   message = 'You win!'\r\n   console.log(message)\r\n   res.redirect('/triunfo')\r\n }\r\n res.redirect('/')\r\n})\r\n\r\n\r\n\r\napp. listen(3000, () =\u003e {\r\n  console.log(\"it's on\")\r\n})","notes":"Secret word game","language":"nodejs","tags":["nodejs, js, handlebars"],"author":"ki","id":"599a5931aed20c24bfa8c223"}
{"_id":{"$oid":"599a598eaed20c24bfa8c224"},"__v":0,"title":"secret-word-css","body":"*{\r\n\r\n  font-family: monospace;\r\n\r\n}\r\n\r\nbody{\r\n\r\n  text-align: center;\r\n  align-items: center;\r\n  background:#009999 ;\r\n}\r\n\r\nh1{\r\n\r\n  font-size: 40px;\r\n\r\n}\r\n\r\na{\r\n\r\n  text-decoration: none;\r\n  font-size: 30px;\r\n}\r\n\r\n\r\ninput{\r\n\r\n  padding: 10px;\r\n  font-size: 15px;\r\n\r\n}\r\n\r\nbutton {\r\n\r\n    background-color:#008080 ;\r\n    border: none;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n\r\n}\r\n\r\n.tries {\r\n  font-size: 30px;\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n}","notes":"styling in css","language":"css","tags":["css, html, js, nodejs, handlebars"],"author":"ki","id":"599a598eaed20c24bfa8c224"}
